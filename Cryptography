Cryptosystem == pair of algorithms [encryption/decryption of data].Generating and shareing the key [in secret] is a part
of cryptosystem. Used in order to send the message in a secure through the internet [online & locally]. 
The Advanced Encryption Standard [AES] is used by the governments to maintain to secure their documents which was chosen
from the many candidates across the mathematics. 

Plaintext == The original message in its original legible form.

Ciphertext == Encrypted text that will appear to be a random string.

Encryption == Process of converting data from the cryptic which prevents unauthorized access [converting plaintext to 
ciphertext]. The key required to provide information for the implementation of the encryption algorithm.

Decription == Converting encrypted data into original  which requires decryption key to provide information to 'undo'
the encryption.


Cryptoanalysis == breaking ciphers which uses different analyses s.t. math analyses, logical analysis, side-channel analysis
on a cipher to attempt.

Steganography == @covered writing@ the science of hiding information @ in plain sight@. completelu obscure the existence 
of information instead of concealing its content. interception of encryped message is a evidance the existence of a secret
[looks like gilberish]. E.G. Mona-LIza.

Cryptography & steganography could be used together. Could be encrypted as a fake message and on the next stage, 
steganography would hide the origin, pretending no need to encrypt on the next stage.But once steganography is broken, 
means that the message is completely revealed.

3_main_goals [CIA==Confidentiality,Integrity,Authentication] of cryptography

Confidentiality
 == cryptographic algorithms attempt to keep secure the contents of a message sent to smb. making impossible 
to encript the message without the knowledge of the secret key which owns the opposite side.

Integrity
== cryptographic algorithm verifies that a message was not modified in transit. Ciphers provide a means to calculate 
Message Authetication Code [MAC] verifies the integrity of a message.

Authentication
== Makes sure who sends the message, so the knowlede of the encryption key means the message comes from the claimed
sender., if its known to a group off people, it's difficult to define the sender.

The fourth global: non-repudiation:

Non-repudiation==some of senders cannot deny they send the message. A message that decrypts with a public key must have
been written by the owner of the private key [or someone who has access to it] and the sender cannot deny sending it
[unless they were negligent in protecting their pvate key]

Kerchckoff's principle
"A cryptosystem should be secure even if everything about the system is public, exept  the key is public knowledge".
No knowledge how the system works => no opportunity to identify weaknesses which could allow it be more vulnerable
and be broken.

Is a structure on which many ciphers such as the Lucifer cipher are based .1973. Multi-round sipher that drives the 
current internal state of the cipher into 2 parts and operates only on a single partin each round of encryption or
decryption. Between the rounds, left and right sides of the internal states switch sides.

One-Time_Pad

The only completely unbreakable cipher. Assuming the pad is randomly generated, non-reuse [=> "one-time pad"],not leaked,
hece it is impossible to learn even 1 bit of plaintext of a message from ciphertexxt. Done by hand, non using a computer.

Encryption and Decryption

Encryption is based on XOR operation [2 identical bits, 2 zeros or 2 ones]
It's the same length as the message to encrypt ;) hihi 
So, encrypt the letters to binary => ascii, and then perform exclusive or for each bit of the message with each bit of 
the one-time pad!!!

Decryption

perform exclusive-or of the cipher which gives original message works, cause x^x = 0 

Issue with re-use
since it requires a secret key the same lenth as the message itself, more logical to generate large andom key and
use for multiple encryptions. Using the same pad for multy encryptions => breaks the security of the one-time pad
protocol and could reveal the secret key/ plaintext.

Narrowing down options using ciphertext

The possible values of the message => [ASCII] encoded letters or spaces, we can determine that the letter cannot be 
HIJKNU or Z. The exclusive or is outside the range of possible values in alphabet

Spaces reveal a lot

Reveals the letter of the next letter of the other message and the byte of the pad [the pad is the XOR of a ciphertext 
byte and the coresponding byte of plaintext.]

Disadvantage

The pad is the same length as the message.
Each pad can only once 

Advantages

Completely unbreakable. A it could be 0 or 1 => cupher has wqual probability of being a 0 or 1 in the plaintext.
Is one of the best protocol when the work must be done by hand, without of aid of computer is illegal or anvilable.
Two parities are in a secure enviroment, and need to depart 2 seperate secure enviroments with perfect security.



Feistel_cipher_[Feistel Network]
i
s a structure on which many ciphers such as the Lucifer cipher are based .1973. Multi-round sipher that drives the 
current internal state of the cipher into 2 parts and operates only on a single partin each round of encryption or
decryption. Between the rounds, left and right sides of the internal states switch sides.
s a structure on which many ciphers such as the Lucifer cipher are based .1973. Multi-round sipher that drives the 
current internal state of the cipher into 2 parts and operates only on a single partin each round of encryption or
decryption. Between the rounds, left and right sides of the internal states switch sides.


The steps for encryption.

1. Key exchanging between the sides via a secure channel.
2. Breaking length into parts that cipher accepts. for each prt [block] following stepas re taken.
3. Split plaintex into a left and right peaces L[0] & R[0]
4. Set the value of round key 0 to the initial secret key. RK[0]=S. RK is the round key.
5. The left part of the round i+1 is set as the right side of round i, which is L[i+1] = R[i].
6. Evaluates the function F[R[i],RK[i]] R[i] is the right side of the current round. The result is exclusive-ored
   with L[i] and stored as the right side of round i+1 which is R[i+1]= L[i] exclusiveored F[R[i],RK[i]]
7. If not the last round, evaluates the function K[RK[i]] and stores the result as round key i+1 == RK[i]=K[RK[i]].
8. Repeats 5-7 steps for n rounds.
9. L[n] & R[n] are combined to create the ciphertext block for this plaintex block.
10. All ciphertext blocks combined to a single ciphertext C, sends the result C to Rx.    

The Encryption Phase

The plain text split into 2 pieces. The right piece of one round becomes the left piece of the text. The left piece is 
exclusive-ored with the result of performing the function F[the function which makes a Feistel cipher unique from other 
Feistel cipers, where  encryption happens and its security is vital to the security of tht cipher, comletly discards the 
round key input and operates only on the plaintext can be brockes, as all attacker has to do is guess the plaintext and 
confirm] that the ciphertext matches on the right piece. The result of this is placed on the right side of the next round 
which means that the 2 peases of the original plaintext will be transformed in alternate rounds[whether is in the right 
side during a round moves on to the next round unchainged].

Key Scheduling

This acts as an input to each round of the cipher. There are 2 possible options for a key schedule.
1. Key for each round of the cipher [which is the same as "round key"] included in the secret key shared by the 2 parties
which is a long shared secret key.
2. The shared secret key is used as an input to a "key expansion" function which performs some operation on the previous 
round key or the current internal state of the key generation algorithm to generate the next round key.

The K function transforms the initial secret key into round key for each round of encryption. this function must be selected 
to maintain the key space of the encryption function. If 64-bit secret key space shriks to 32 bits, then keys in order to decrypt 
the ciphertext.

Decryption in a Feistel Network

The major priority is  that the same stucture can be used for encryption and decryption. For the encrypted with the Feistel network
shown in the diagram we can use the exact same stucture to decrypt. The only difference is that in decryption tound key in reverse is 
used.
How to decrypt Feistel network.

1. 2 Parts exchange the secret key  S, through a secure channel and 1 sends to 2 a ciphertext C.
2. 2 part calculates the round key for all rounds using the key scheduling function K i.e. RK (i+1)=K[RK(i)] 
3. 2 part breaks C into blocks of the length that the ciphertext accepts. Forr each following steps followed.
4. 2 part splits the ciphertext block into a left piece and a right piece. L[n] and R[n]
5. The right side of the round (i) is simpli the left side of round (i+1) => R(i)=L(i+1)
6. L(i) is calculated  as L(i)=R(i+1)ixoredF[R(i),RK(i)]. which works cos of xor-function following property 
	A=B xored C implies B=A xnored C.
7. 1 part repeats 5-6 steps for n - rounds
8. L(0) and R(0) are combined to create the plaintext  block for this ciphertext block.
9. All plaintext blocks are combined to a single plaintext P.

Decryption Mechanism.

The same operation is used to perform and undo the itself. 
1. The right half undoes itself as all that happens is that something swithces sides.
2. Undoing the left half depends on 2 crucial things.
	1.  we have all the information that was avilable to the function F during the encryption phase [R(i) and  RK(i)]
	2. The xor-function has property of B xored B =0 for all values of B. A=B xored C => A xored C=B xored C xored C= Bxored0 = b
	A=B xored C implies A xored C=B => L(i)=R(i+1) xored F[R(i),RK(i)
This will work for an operation that is its own inverse [likw exclusive-oe]  which is why Feistel networks always use exclusive-or 
for changing the transformation half of the state in a round. 

Making Strong Feistel Chipher

Feistel structure does not clrearly map to the cryptographic principles of confusion[which requres based on several bits of the shared 
secret key for each bits of the ciphertext] and diffusion [ means that a change of a single bit of the plaintextshould change roughly 
half of the bits of the bits of the ciphertext after encryption [vice versa after decryption]]. All of these properties must be handled 
within the round function. F which is not specified as part of the Feistel structure.

Advantages

2 baisic advantages.
1. Structural reusability. As the same structured is used to encrypt and decrypd as a long as the key schedule is reversed for the decryption
which is usefull from the sight of the hardwere implementations of ciphers since all of the encryption logic does not have to be reimplemented
in reverceto decrypt.
2. The ability to use one-way round functions. As F does not have to be reversible. Most ciphers require that every transformation of the 
plaintext performed in encryption be reversible so that they can undone in decryption. 

Disadvantages of Feistel Ciphers

Limited ability to be parallelized as compared to other ciphers. In other ciphers the entire internal state of the cipher changed  with each round
Feistel chipher only changes part of the internal state each round.

DES & 3DES Algorithms [Data encryption standart and tripple DES]

DES == 16rund Feistel cipher which takes input 64-bit input & a 64-bit secret key with 3 main stages.

1. Initial permutation. [are all permutation operations=>output the input they receive after applying a specific permutation.]
2. Round function [16 times]
3. Final permutation 

DES round function 

swaps the left and tight side of the inputs and applies the F function during one of the swaps.
DES consists of several steps

1 The input half-block is expanded using an expansion

2 The expanded input is exclusive-ored with the round key

3 The result is broken into 8-6 bit pieces and each is passed through a unique substitution box or S-Box

4 The result pass through permutation function P

The E-function, S-Boxes, and P function are described in more detail as follows in the followsing sections.

The DES key schedule

the key schedule of DES consists of two main stages: the initial key permutation using the permtated choice 1 algorithm and the
generation of the round keys using a shift operation of the permuted choice 2 algorithm. 

The initial permutation of DES chnges the order of the plaintex prior to the first round of encryption,makes no attempt to 
randomize the data in the table.After initial permutation functions begin consisting of E function, which is used to expand the 32-bit input
to a round's F function into 48-bit block. The E function is fairly straightforward. The first 2 bits of each eight-bit block are the same 
as the last two bits of the previouse block [wraps around to the last block in the case are the first row].Remaining 4 columns are the bits 
of the input in order starting with the second bit.After E-function comes exlusice-or [ in round function] the 48 bit output from the E 
function is excclusive-ored with the 48-bit round key. Then DES S-boxes are implemented [in round function] th input , which is th e output
of exclusive or, is broken into eight six-bit blocks each of them passes different substitution boxes [S-Box]. To use S-box row and column are
used using the outer two and inner four bits of the binary representation of the input using special format table. Then comes P-function[the
last step of the round function] encryption stage[in round function]. which in DES is another permutaion function. It takes a 32 bit blocks. 
This permutation is not random and is the same for all rounds of DES. The final permutation occurs after the sixteen rounds of DES are completed 
which is identical to the original input of the initial permutation.

Shift operation.

For each round - subkeys are shifted to the left by a set amount which are cumulative and the shift anout for each round.

Permuted chise 2

After shifting occurs the round key is generated using the permuted choisr 2 [PC2] algorithm which taked 56 bit key [each of them is used in an average 
of 14 of 16 round keys] as input and  produces a 48 - bit round key. 

Decription with DES

The same steps as encryption apart from the fact that the round key need to be used in reverse order. 

3DES:Triple DES 

Due to the small size of secret key  the DES algorithm is not currently in use in its original form => a variant of DES invented, called [tripleDEZ] 
with triple size of secret key.

Advantages

DES is broken, 3DES is a secure cipher nowdays. DES has desirable properties of confusion and diffusion each of bit is based upon multiple bits of 
the key and changing a single bit of plaintext changes half of the bits of ciphertext in average. Due to the Feistel structure and uncomplicated logic 
DES is relatively easy to implement, uses 8 distinct s-Boxes, which increases its footprint.

Disadvantages

The main disatvantage of DES is that it is broken using brute-force search. While using 3DES mitigates this issue at the cost of increasing execution
time. DES is vulnerable to attack using linear cryptanalysis. takes 2^47 known plaintexts to break DES in this manner.

